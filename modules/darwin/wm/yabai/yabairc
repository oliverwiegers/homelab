#!/usr/bin/env sh

##
## Function definitions.
##

# Create and label space.
function setup_space {
  local idx="$1"
  local name="$2"
  local space=""

  if ! yabai -m query --spaces --space "$idx" > /dev/null 2>&1; then
    yabai -m space --create
  fi

  yabai -m space "$idx" --label "$name"
}

# Move space to correct monitors.
function move_spaces {
    # Make sure there is a temp window on every monitor so space rearangement
    # does not fail.
    setup_space 10 temp_internal
    setup_space 11 temp_external
    yabai -m space --focus temp_internal
    yabai -m space --display 1
    yabai -m space --focus temp_external
    yabai -m space --display 2

    # Move primary spaces to external/big screen.
    yabai -m space --focus shell
    yabai -m space --display 2
    yabai -m space --focus browser
    yabai -m space --display 2
    yabai -m space --focus notes
    yabai -m space --display 2

    # Move secondary spaces to internal/small screen.
    yabai -m space --focus misc
    yabai -m space --display 1
    yabai -m space --focus chat
    yabai -m space --display 1
    yabai -m space --focus mail
    yabai -m space --display 1

    # Focus previously focused space.
    yabai -m space --focus shell

    # Delete temp spaces.
    yabai -m space --destroy temp_internal
    yabai -m space --destroy temp_external
}

# Remove undisired spaces.
function remove_undisired_spaces {
    regex_pattern_spaces="(shell)|(browser)|(notes)|(misc)|(chat)|(mail)"
    undisired_spaces="$(yabai -m query --spaces | jq -e --arg pattern "${regex_pattern_spaces}" '.[] | select(.label | test($pattern) | not) | .index')"

    # Label spaces because index will change with deletion of spaces.
    for space in ${undisired_spaces[@]}; do
        yabai -m space "${space}" --label "tbd${space}"
    done

    # Move remaining windows and delete space.
    for space in ${undisired_spaces[@]}; do
        windows="$(yabai -m query --spaces | jq -r -e --arg space "tbd${space}" '.[] | select(.label == $space) | .windows | @sh' | tr ' ' '\n')"

        for window in ${windows}; do
            yabai -m window "${window}" --space shell
        done

        yabai -m space --destroy "tbd${space}"
    done
}

# Add a new rule and apply at the same time.
function yabai_rule {
  yabai -m rule --add "$@"
  yabai -m rule --apply "$@"
}

##
## Yabai settings.
##

# Load scripting additions.
sudo yabai --load-sa
yabai -m signal --add event=dock_did_restart action="sudo yabai --load-sa"

# Focus window under mouse after window close.
yabai -m signal --add event=window_destroyed action="yabai -m query --windows --window &> /dev/null || yabai -m window --focus mouse"
yabai -m signal --add event=application_terminated action="yabai -m query --windows --window &> /dev/null || yabai -m window --focus mouse"
yabai -m signal --add event=display_added action="launchctl kickstart -k gui/${UID}/org.nixos.yabai"
yabai -m signal --add event=display_removed action="launchctl kickstart -k gui/${UID}/org.nixos.yabai"

# Layout.
yabai -m config layout bsp
yabai -m config auto_balance off

# Windows.
yabai -m config window_topmost off

# Set modifier to alt.
yabai -m config mouse_modifier alt
# Set modifier + right-click drag to resize window (default: resize).
yabai -m config mouse_action2 resize
# Set modifier + left-click drag to resize window (default: move).
yabai -m config mouse_action1 move

# Gaps.
yabai -m config top_padding    10
yabai -m config bottom_padding 10
yabai -m config left_padding   10
yabai -m config right_padding  10
yabai -m config window_gap     7

# Focus.
yabai -m config focus_follows_mouse off
yabai -m config mouse_follows_focus on

# Border colors and width.
borders active_color=0xffe1e3e4 inactive_color=0xff494d64 width=10.0 2>/dev/null 1>&2 &

##
## Funtion calls
##

# Create wanted spaces.
setup_space 1 shell
setup_space 2 browser
setup_space 3 notes
setup_space 4 misc
setup_space 5 chat
setup_space 6 mail

# Apply rules.
yabai_rule app="^System Settings$"    manage=off
yabai_rule app="^System Information$" manage=off
yabai_rule app="^System Preferences$" manage=off
yabai_rule title="Preferences$"       manage=off
yabai_rule title="Settings$"          manage=off

# Assign apps to spaces at start.
yabai_rule app="Firefox" space=browser
yabai_rule app="Alacritty" space=shell
yabai_rule app="Slack" space=chat
yabai_rule app="Microsoft Outlook" space=mail
yabai_rule app="Microsoft Teams" space=chat

# Move spaces to correct monitors and delete unwanted ones.
move_spaces
#remove_undisired_spaces

# Cleanup unwanted spaces.
for index in $(yabai -m query --spaces | jq '.[] | select(.label == "") | .index' | sort -nr); do
  yabai -m space --destroy "${index}"
done
