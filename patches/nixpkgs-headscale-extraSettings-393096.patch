From af55560e74e8bfb2eaf350d14226b751e8b00a1d Mon Sep 17 00:00:00 2001
From: oliverwiegers <oliver.wiegers@netlogix.de>
Date: Tue, 25 Mar 2025 15:24:46 +0100
Subject: [PATCH] nixos/headscale: Add extraSettings option

`extraSettings` adds the possibility to headscale config options that
don't have a nixos module option exposed.
---
 .../modules/services/networking/headscale.nix | 12 +++++++++-
 nixos/tests/headscale.nix                     | 22 +++++++++++++++++++
 2 files changed, 33 insertions(+), 1 deletion(-)

diff --git a/nixos/modules/services/networking/headscale.nix b/nixos/modules/services/networking/headscale.nix
index 07924f54e3692..2e46284119495 100644
--- a/nixos/modules/services/networking/headscale.nix
+++ b/nixos/modules/services/networking/headscale.nix
@@ -18,8 +18,9 @@ let
     unix_socket = "${runDir}/headscale.sock";
   };

+  configOptions = lib.recursiveUpdate cfg.settings cfg.extraSettings;
   settingsFormat = pkgs.formats.yaml { };
-  configFile = settingsFormat.generate "headscale.yaml" cfg.settings;
+  configFile = settingsFormat.generate "headscale.yaml" configOptions;
   cliConfigFile = settingsFormat.generate "headscale.yaml" cliConfig;

   assertRemovedOption = option: message: {
@@ -487,6 +488,15 @@ in
           };
         };
       };
+
+      extraSettings = lib.mkOption {
+        default = { };
+        type = lib.types.attrsOf lib.types.anything;
+        description = ''
+          Extra configuration options which are serialized to yaml and added
+          to the headscale.yaml file.
+        '';
+      };
     };
   };

diff --git a/nixos/tests/headscale.nix b/nixos/tests/headscale.nix
index 3ba331b7c3d4b..a4721d29119f3 100644
--- a/nixos/tests/headscale.nix
+++ b/nixos/tests/headscale.nix
@@ -46,6 +46,15 @@ import ./make-test-python.nix (
                 };
                 dns.base_domain = "tailnet";
               };
+              extraSettings = {
+                dns.extra_records = [
+                  {
+                    name = "grafana.myvpn.example.com";
+                    type = "A";
+                    value = "100.64.0.3";
+                  }
+                ];
+              };
             };
             nginx = {
               enable = true;
@@ -71,8 +80,16 @@ import ./make-test-python.nix (
         };
       };

+    # Type checking on extra packages doesn't work yet
+    skipTypeCheck = true;
+
+    extraPythonPackages = p: [ p.pyyaml ];
+
     testScript = ''
+      import yaml
+
       start_all()
+
       headscale.wait_for_unit("headscale")
       headscale.wait_for_open_port(443)

@@ -88,6 +105,11 @@ import ./make-test-python.nix (
       # Check that they are reachable from the tailnet
       peer1.wait_until_succeeds("tailscale ping peer2")
       peer2.wait_until_succeeds("tailscale ping peer1.tailnet")
+
+      with open("/etc/headscale/config.yaml", encoding="utf-8") as config:
+          config_dict = yaml.safe_load(config)
+          assert "extra_records" in config_dict["dns"].keys(), "Config file does not contain settings from services.headscale.extraSettings."
+          assert config_dict["dns"]["extra_records"][0]["name"] == "grafana.myvpn.example.com", "Extra record has wrong name or does not exist."
     '';
   }
 )
